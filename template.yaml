AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An app that sends a daily email message for each HSK level with a vocab word
Parameters:
  S3BucketName:
    Type: String
  S3BucketKey:
    Type: String  
  DomainName:
    Type: String
  SGApiKey:
    Type: String
  SubNotifyEmail:
    Type: String
  Stage:
    Type: String

Globals:
  Api:
    # Add AllowMethods with a list of methods for this domain name to call the API in this template
    Cors: !Sub "'${DomainName}'"

Resources:
  SendDailyCampaign:
    # A function that sends a daily SendGrid campaign with a vocab word for each HSK level
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: SendDailyCampaign-${Stage}
      Handler: SendDailyCampaign.lambda_handler
      Runtime: python3.7
      CodeUri: ./SendDailyCampaign
      Description: A function that sends a daily SendGrid campaign with a vocab word for each HSK level
      Timeout: 120
      Policies:
       - AWSLambdaExecute
       - AWSLambdaRole
       - SNSPublishMessagePolicy:
           TopicName: !GetAtt NotificationTopic.TopicName
      Environment:
        Variables:
          SG_API_KEY: !Ref SGApiKey
          SUB_TOPIC_ARN: !Ref NotificationTopic
      Events:
        DailySchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 20 * * ? *)

  VocabRandomEntry:
    # A function that selects a random entry from an S3 file
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: VocabRandomEntry-${Stage}
      Handler: VocabRandomEntry.lambda_handler
      Runtime: python3.7
      CodeUri: ./VocabRandomEntry
      Description: A function that selects a random entry from an S3 file
      Environment:
        Variables:
          S3_BUCKET_NAME: !Ref S3BucketName
          S3_BUCKET_KEY: !Ref S3BucketKey
      Policies:
       - AWSLambdaExecute
       - AWSLambdaRole

  SampleVocabFunction:
    # A function that returns five random words for each HSK level
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: SampleVocabFunction-${Stage}
      Handler: SampleVocabFunction.lambda_handler
      Runtime: python3.7
      CodeUri: ./SampleVocabFunction
      Description: A function that returns five random words for each HSK level
      MemorySize: 128
      Timeout: 3
      Policies:
       - AWSLambdaExecute
       - AWSLambdaRole
      Environment:
        Variables:
          S3_BUCKET_NAME: !Ref S3BucketName
          S3_BUCKET_KEY: !Ref S3BucketKey
      Events:
        SampleVocabFunctionApi:
          # An API Gateway endpoint that responds to HTTP GET
          Type: Api
          Properties:
            Path: /sample_vocab
            Method: GET
  
  SubscribeFunction:
    # A function that takes an HSK level and email address inputs and subscribes to a topic
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: SubscribeFunction-${Stage}
      Handler: SubscribeFunction.lambda_handler
      Runtime: python3.7
      CodeUri: ./SubscribeFunction
      Description: A function that takes an HSK level and email address inputs and subscribes to a topic.
      MemorySize: 128
      Timeout: 3
      Policies:
       - AWSLambdaExecute
       - AWSLambdaRole
       - SNSPublishMessagePolicy:
           TopicName: !GetAtt NotificationTopic.TopicName
      Environment:
        Variables:
          SG_API_KEY: !Ref SGApiKey
          SUB_TOPIC_ARN: !Ref NotificationTopic
      Events:
        SubscribeFunctionApi:
          # Define an API Gateway endpoint that responds to HTTP POST
          Type: Api
          Properties:
            Path: /sub
            Method: POST
  
  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription: 
      - Protocol: email
        Endpoint: !Ref SubNotifyEmail

  NewUserConfirmation:
    # A function that sends a confirmation email to new users and a notification to an SNS topic
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: NewUserConfirmation-${Stage}
      Handler: NewUserConfirmation.lambda_handler
      Runtime: python3.7
      CodeUri: ./NewUserConfirmation
      Description: A function that sends a confirmation email to new users and a notification to an SNS topic
      MemorySize: 128
      Timeout: 3
      Policies:
       - AWSLambdaExecute
       - AWSLambdaRole
      Environment:
        Variables:
          SG_API_KEY: !Ref SGApiKey

  Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref NotificationTopic
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref SendDailyCampaign
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: '1'

